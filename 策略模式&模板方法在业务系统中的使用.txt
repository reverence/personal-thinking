背景:
在一些复杂业务流程中，经常会存在一些列的校验，比如有A,B,C,D,E5个流程校验，流程之间前后有顺序性，
比如B不能发生在A之前，E不能发生在D之前，但某些流程可以跳过：
举例说明:
业务场景1需要经过ABD三个校验流程，业务场景2需要经过BCD三个校验流程，业务场景需要经过CDE三个流程校验，
随着业务发展，在某些场景，可能需要在原有校验流程的基础上进行扩展校验。
实现方式1：
针对上面的问题，可以在不同场景，分别实现A,B,C,D,E校验流程，可能存在如下的代码：
public class S1{//场景1
	public void check(T t){
		checkA(t);//校验流程A
		checkB(t);//校验流程B
		checkC(t);//校验流程C
	}
}

public class S2{//场景2
	public void check(T t){
		checkB(t);
		checkC(t);
		checkD(t);
	}
}
//场景3.....N
上面的代码虽然看上去可以实现功能，但随着业务场景的增加，冗余代码会越来越多，比如校验流程B需要做个改动，
需要在N个场景class中进行修改，稍微漏改一个就会造成业务问题。为此